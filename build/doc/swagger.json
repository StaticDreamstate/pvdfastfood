{
    "openapi": "3.0.3",
    "info": {
        "title": "Pvd Fast Food - API Devio",
        "description": "API desenvolvida para a empresa Devio, como desafio relativo ao processo seletivo para a vaga de desenvolvedor backend junior. Como solicitado pela empresa, a presente documentação \n descreve de forma técnica e detalhada a implementação da API.\n\n - Banco de dados: MongoDB\n - Linguagem de Programação: Javascript/Typescript\n - IDE/Editor: Visual Codium\n - Bibliotecas Principais: express, swagger-ui, cors, dotenv, mongoose, node-thermal-printer, swagger-ui-express, winston e ws.\n\n Para mais informações, acesse:\n\n - [Repositório do github](https://github.com/StaticDreamstate/pvdfastfood)\n - [README.md do projeto](https://github.com/StaticDreamstate/pvdfastfood/blob/main/README.md)",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://pvd-fastfood.herokuapp.com/"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Ponto de entrada da API",
                "description": "Indica se a API está online",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "503": {
                        "description": "Erro interno, API fora do ar (crash)."
                    }
                }
            }
        },
        "/menu": {
            "get": {
                "summary": "Exibe parte dos produtos como sugestão",
                "description": "Rota de cardápio. Mostra os primeiros cinco produtos",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/produto/{param}": {
            "get": {
                "summary": "Busca de um produto através de um parâmetro {param}",
                "description": "{param} pode ser tanto o código do produto (ex: 2), quanto seu nome (ex: Hot dog)",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "{param}",
                        "in": "path",
                        "description": "Independente de ser informado como código ou nome, {param} é considerado uma string.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto encontrado"
                    },
                    "404": {
                        "description": "Produto não encontrado (não cadastrado)"
                    }
                }
            }
        },
        "/order": {
            "post": {
                "summary": "Inicia o registro de um novo pedido",
                "description": "O nome do cliente, os items (códigos ou nomes) e uma observação opcional formam o corpo da requisição",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Inicia o registro de um novo pedido",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/order"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/order"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/order"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Pedido registrado, mas ainda em andamento"
                    }
                }
            }
        },
        "/order/{id}": {
            "put": {
                "summary": "Edita um registro em andamento, adicionando ou removendo produtos",
                "description": "O nome do cliente, os items (códigos ou nomes) e uma observação opcional formam o corpo da requisição",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "{id}",
                        "in": "path",
                        "description": "Id (gerado pelo banco de dados) do pedido em andamento",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Edita o pedido, fazendo uso do mesmo corpo",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/editOrder"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/editOrder"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/editOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Pedido alterado"
                    },
                    "400": {
                        "description": "Dados insuficientes para alterar o pedido"
                    },
                    "404": {
                        "description": "Pedido não encontrado"
                    }
                }
            },
            "delete": {
                "summary": "Desistência do pedido",
                "description": "Deleta o registro do pedido em andamento caso o cliente mude de ideia",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "{id}",
                        "in": "path",
                        "description": "O id (gerado pelo banco de dados) do pedido em andamento é usado para encerrá-lo",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Pedido em andamento deletado"
                    }
                }
            }
        },
        "/order/close/{id}": {
            "post": {
                "summary": "Fecha o pedido",
                "description": "O cliente informa o método de pagamento, efetua o pagamento, tem sua via impressa e a cozinha é notificada",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "{id}",
                        "in": "path",
                        "description": "Id (gerado pelo banco de dados) do pedido fechado é enviado para a cozinha",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finaliza o pedido, recebendo o método de pagamento",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/pay"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/pay"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/pay"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Pedido fechado"
                    }
                }
            }
        },
        "/kitchen/:id": {
            "delete": {
                "summary": "A cozinha deu baixa",
                "description": "Deleta o registro do pedido marcado como finalizado, assim como o registro do carrinho",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "{id}",
                        "in": "path",
                        "description": "O id (gerado pelo banco de dados) do pedido em andamento é usado para dar a baixa e liberar a tela para outro pedido.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Pedido processado. Registros deletados."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "order": {
                "type": "object",
                "properties": {
                    "cliente": {
                        "type": "string",
                        "required": true,
                        "example": "Eduardo"
                    },
                    "items": {
                        "type": "string",
                        "required": true,
                        "example": "0,1,2"
                    },
                    "observacao": {
                        "type": "string",
                        "required": false,
                        "example": "Sem mostarda"
                    }
                },
                "xml": {
                    "name": "##default"
                }
            },
            "editOrder": {
                "type": "object",
                "properties": {
                    "cliente": {
                        "type": "string",
                        "required": true,
                        "example": "Eduardo"
                    },
                    "items": {
                        "type": "string",
                        "required": true,
                        "example": "2,3,4"
                    },
                    "observacao": {
                        "type": "string",
                        "required": false,
                        "example": "Sem mostarda e dobro de cebola"
                    }
                },
                "xml": {
                    "name": "##default"
                }
            },
            "pay": {
                "type": "object",
                "properties": {
                    "pagamento": {
                        "type": "string",
                        "required": true,
                        "example": "Crédito à vista"
                    }
                },
                "xml": {
                    "name": "##default"
                }
            }
        }
    }
}
